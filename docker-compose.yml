version: '3.8'

services:
  # Redis Cache
  redis:
    image: redis:7.2-alpine
    container_name: conversationalengine-redis
    restart: unless-stopped
    command: redis-server --appendonly yes
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - conversationalengine-network
    healthcheck:
      test: ["CMD", "redis-cli", "--raw", "incr", "ping"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 30s

  # Memory Service
  memory:
    build:
      context: .
      dockerfile: memory/Dockerfile
    container_name: conversationalengine-memory
    restart: unless-stopped
    env_file:
      - .env
    ports:
      - "8010:8080"
    volumes:
      - ./logs:/app/logs
    depends_on:
      redis:
        condition: service_healthy
    networks:
      - conversationalengine-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  # Core Service (Orchestrator + Primary + Checkpoint + Checklist)
  core-service:
    build:
      context: .
      dockerfile: core/Dockerfile
    container_name: conversationalengine-core-service
    restart: unless-stopped
    env_file:
      - .env
    ports:
      - "8002:8080"
    volumes:
      - ./logs:/app/logs
    depends_on:
      redis:
        condition: service_healthy
      memory:
        condition: service_healthy
    networks:
      - conversationalengine-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  # Agents Specialist Service
  agents-specialist:
    build:
      context: .
      dockerfile: specialists/agents/Dockerfile
    container_name: conversationalengine-agents-specialist
    restart: unless-stopped
    env_file:
      - .env
    ports:
      - "8015:8080"
    volumes:
      - ./keys:/app/keys
      - ./logs:/app/logs
    depends_on:
      redis:
        condition: service_healthy
    networks:
      - conversationalengine-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

    # API Gateway Service
  api-gateway:
    build:
      context: .
      dockerfile: api_gateway/Dockerfile
    container_name: conversationalengine-api-gateway
    restart: unless-stopped
    env_file:
      - .env
    ports:
      - "8000:8080"
    volumes:
      - ./keys:/app/keys
      - ./logs:/app/logs
    depends_on:
      redis:
        condition: service_healthy
      memory:
        condition: service_healthy
      core-service:
        condition: service_healthy
      agents-specialist:
        condition: service_healthy
    networks:
      - conversationalengine-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

networks:
  conversationalengine-network:
    driver: bridge

volumes:
  redis_data:
    driver: local