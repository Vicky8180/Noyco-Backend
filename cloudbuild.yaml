substitutions:
  _REGION: us-central1
  _ARTIFACT_REGISTRY_REPO: conversationalengine-repo

steps:
  # Build and push memory service
  - name: 'gcr.io/cloud-builders/docker'
    id: 'build-memory'
    args:
      - 'build'
      - '-t'
      - '${_REGION}-docker.pkg.dev/$PROJECT_ID/${_ARTIFACT_REGISTRY_REPO}/memory-service:$COMMIT_SHA'
      - '-f'
      - 'memory/Dockerfile'
      - '.'
  - name: 'gcr.io/cloud-builders/docker'
    id: 'push-memory'
    waitFor: ['build-memory']
    args: ['push', '${_REGION}-docker.pkg.dev/$PROJECT_ID/${_ARTIFACT_REGISTRY_REPO}/memory-service:$COMMIT_SHA']

  # Build and push core service
  - name: 'gcr.io/cloud-builders/docker'
    id: 'build-core-service'
    args:
      - 'build'
      - '-t'
      - '${_REGION}-docker.pkg.dev/$PROJECT_ID/${_ARTIFACT_REGISTRY_REPO}/core-service:$COMMIT_SHA'
      - '-f'
      - 'core/Dockerfile'
      - '.'
  - name: 'gcr.io/cloud-builders/docker'
    id: 'push-core-service'
    waitFor: ['build-core-service']
    args: ['push', '${_REGION}-docker.pkg.dev/$PROJECT_ID/${_ARTIFACT_REGISTRY_REPO}/core-service:$COMMIT_SHA']

  # Build and push agents-specialist service
  - name: 'gcr.io/cloud-builders/docker'
    id: 'build-agents-specialist'
    args:
      - 'build'
      - '-t'
      - '${_REGION}-docker.pkg.dev/$PROJECT_ID/${_ARTIFACT_REGISTRY_REPO}/agents-specialist-service:$COMMIT_SHA'
      - '-f'
      - 'specialists/agents/Dockerfile'
      - '.'
  - name: 'gcr.io/cloud-builders/docker'
    id: 'push-agents-specialist'
    waitFor: ['build-agents-specialist']
    args: ['push', '${_REGION}-docker.pkg.dev/$PROJECT_ID/${_ARTIFACT_REGISTRY_REPO}/agents-specialist-service:$COMMIT_SHA']

  # Build and push api-gateway service
  - name: 'gcr.io/cloud-builders/docker'
    id: 'build-api-gateway'
    args:
      - 'build'
      - '-t'
      - '${_REGION}-docker.pkg.dev/$PROJECT_ID/${_ARTIFACT_REGISTRY_REPO}/api-gateway-service:$COMMIT_SHA'
      - '-f'
      - 'api_gateway/Dockerfile'
      - '.'
  - name: 'gcr.io/cloud-builders/docker'
    id: 'push-api-gateway'
    waitFor: ['build-api-gateway']
    args: ['push', '${_REGION}-docker.pkg.dev/$PROJECT_ID/${_ARTIFACT_REGISTRY_REPO}/api-gateway-service:$COMMIT_SHA']


  # Deploy memory service
  - name: 'gcr.io/google.com/cloudsdktool/cloud-sdk'
    id: 'deploy-memory'
    waitFor: ['push-memory']
    entrypoint: gcloud
    args:
      - 'run'
      - 'deploy'
      - 'conversationalengine-memory'
      - '--image'
      - '${_REGION}-docker.pkg.dev/$PROJECT_ID/${_ARTIFACT_REGISTRY_REPO}/memory-service:$COMMIT_SHA'
      - '--region'
      - '${_REGION}'
      - '--platform'
      - 'managed'
      - '--allow-unauthenticated'
      - '--memory'
      - '1Gi'
      - '--cpu'
      - '1'
      - '--min-instances'
      - '1'
      - '--max-instances'
      - '3'
      - '--timeout'
      - '300'
      - '--concurrency'
      - '80'
      - '--update-secrets=REDIS_URL=conversationalengine-secrets:REDIS_URL,MONGODB_URI=conversationalengine-secrets:MONGODB_URI'

  # Deploy core service
  - name: 'gcr.io/google.com/cloudsdktool/cloud-sdk'
    id: 'deploy-core-service'
    waitFor: ['deploy-memory', 'push-core-service']
    entrypoint: gcloud
    args:
      - 'run'
      - 'deploy'
      - 'conversationalengine-core'
      - '--image'
      - '${_REGION}-docker.pkg.dev/$PROJECT_ID/${_ARTIFACT_REGISTRY_REPO}/core-service:$COMMIT_SHA'
      - '--region'
      - '${_REGION}'
      - '--platform'
      - 'managed'
      - '--allow-unauthenticated'
      - '--memory'
      - '1Gi'
      - '--cpu'
      - '1'
      - '--max-instances'
      - '5'
      - '--timeout'
      - '300'
      - '--concurrency'
      - '50'
      - '--update-secrets=REDIS_URL=conversationalengine-secrets:REDIS_URL,MONGODB_URI=conversationalengine-secrets:MONGODB_URI'

  # Deploy agents-specialist service
  - name: 'gcr.io/google.com/cloudsdktool/cloud-sdk'
    id: 'deploy-agents-specialist'
    waitFor: ['deploy-core-service', 'push-agents-specialist']
    entrypoint: gcloud
    args:
      - 'run'
      - 'deploy'
      - 'conversationalengine-agents-specialist'
      - '--image'
      - '${_REGION}-docker.pkg.dev/$PROJECT_ID/${_ARTIFACT_REGISTRY_REPO}/agents-specialist-service:$COMMIT_SHA'
      - '--region'
      - '${_REGION}'
      - '--platform'
      - 'managed'
      - '--allow-unauthenticated'
      - '--memory'
      - '2Gi'
      - '--cpu'
      - '2'
      - '--cpu-boost'
      - '--max-instances'
      - '3'
      - '--timeout'
      - '600'
      - '--concurrency'
      - '5' # Low concurrency for CPU-intensive tasks
      - '--update-secrets=REDIS_URL=conversationalengine-secrets:REDIS_URL,GEMINI_API_KEY=conversationalengine-secrets:GEMINI_API_KEY'

  # Deploy api-gateway service
  - name: 'gcr.io/google.com/cloudsdktool/cloud-sdk'
    id: 'deploy-api-gateway'
    waitFor: ['deploy-agents-specialist', 'push-api-gateway']
    entrypoint: gcloud
    args:
      - 'run'
      - 'deploy'
      - 'conversationalengine-api-gateway'
      - '--image'
      - '${_REGION}-docker.pkg.dev/$PROJECT_ID/${_ARTIFACT_REGISTRY_REPO}/api-gateway-service:$COMMIT_SHA'
      - '--region'
      - '${_REGION}'
      - '--platform'
      - 'managed'
      - '--allow-unauthenticated'
      - '--memory'
      - '512Mi'
      - '--cpu'
      - '1'
      - '--max-instances'
      - '10'
      - '--timeout'
      - '300'
      - '--concurrency'
      - '80'
      - '--update-secrets=REDIS_URL=conversationalengine-secrets:REDIS_URL,MONGODB_URI=conversationalengine-secrets:MONGODB_URI,JWT_SECRET_KEY=conversationalengine-secrets:JWT_SECRET_KEY'

# List all final images that will be available in Artifact Registry
images:
  - '${_REGION}-docker.pkg.dev/$PROJECT_ID/${_ARTIFACT_REGISTRY_REPO}/memory-service:$COMMIT_SHA'
  - '${_REGION}-docker.pkg.dev/$PROJECT_ID/${_ARTIFACT_REGISTRY_REPO}/core-service:$COMMIT_SHA'
  - '${_REGION}-docker.pkg.dev/$PROJECT_ID/${_ARTIFACT_REGISTRY_REPO}/agents-specialist-service:$COMMIT_SHA'
  - '${_REGION}-docker.pkg.dev/$PROJECT_ID/${_ARTIFACT_REGISTRY_REPO}/api-gateway-service:$COMMIT_SHA'

# Use a more powerful machine type for faster parallel builds
options:
  machineType: 'E2_HIGHCPU_8'